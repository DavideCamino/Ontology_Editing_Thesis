type Ontology = <rdf:RDF xml:base=String> [ Thing * ]
type Thing = Ont | AnnProperty | ObjProperty | DataProperty | Class | Individual

type Ont = <owl:Ontology rdf:about=String> []

type AnnProperty = <owl:AnnotationProperty rdf:about=String> []

type DataProperty = <owl:DatatypeProperty rdf:about=String> [ PropAttr* ]
type ObjProperty = <owl:ObjectProperty rdf:about=String> [ PropAttr * ]

type PropAttr = Inverse | Domain | Range | PropType
type Inverse = <owl:inverseOf rdf:resource=String> []
type Domain = <rdfs:domain rdf:resource=String> [] 
type Range = <rdfs:range rdf:resource=String> []
type PropType = <rdf:type rdf:resource=String> []

type Class = <owl:Class rdf:about=String> [ ClassAtt * ]
type ClassAtt = SubClass | EqClass | Label | Note | Dictionary
type SubClass = <rdfs:subClassOf rdf:resource=String> []
type EqClass = <owl:equivalentClass> [ EqAttr ] | <owl:equivalentClass rdf:resource=String> []
type EqAttr = <owl:Restriction> [ AnyXml* ]
type Label = <rdfs:label xml:lang=String> String
type Note = <skos:scopeNote xml:lang=String> String
type Dictionary = <skos:exactMatch rdf:resource=String> []

type Individual = <owl:NamedIndividual rdf:about=String> [ IndAttr * ]
type IndAttr = IndClass | IndProp | DataProp
type IndClass = <rdf:type rdf:resource=String> []
type IndProp = <_ rdf:resource=String> []
type DataProp = <_ rdf:datatype=String> String
